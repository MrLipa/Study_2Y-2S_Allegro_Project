{
    "openapi": "3.0.1",
    "info": {
        "title": "Microservices API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3001",
            "description": "Generated server url for User Service"
        },
        {
            "url": "http://localhost:3002",
            "description": "Generated server url for Notification Service"
        },
        {
            "url": "http://localhost:3003",
            "description": "Generated server url for Flight Service"
        },
        {
            "url": "http://localhost:3004",
            "description": "Generated server url for Airport Service"
        },
        {
            "url": "http://localhost:3005",
            "description": "Generated server url for Airplane Service"
        },
        {
            "url": "http://localhost:3006",
            "description": "Generated server url for Admin Service"
        }
    ],
    "paths": {
        "/users/changePassword": {
            "put": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Change User Password",
                "description": "Allows a user to change their password. The user is identified by their authentication context, and the request must include the old and new password.",
                "operationId": "changePassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordChangeDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Invalid old password or new password format",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No active user session or invalid authentication context",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "text/plain": {}
                        }
                    }
                }
            }
        },
        "/users/changeEmail": {
            "put": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Change User Email",
                "description": "Allows a user to change their email address. The user is identified by their authentication context, and the request must include the new email.",
                "operationId": "changeEmail",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailChangeDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Email changed successfully",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid email format or email already in use",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No active user session or invalid authentication context",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "text/plain": {}
                        }
                    }
                }
            }
        },
        "/users/admin/addRole": {
            "put": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Add role to user",
                "description": "Adds a specified role to a user with a given username after verifying that both the user and the role exist.",
                "operationId": "addRoleToUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleToUserDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "User or role not found",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "200": {
                        "description": "Role added to user successfully",
                        "content": {
                            "text/plain": {}
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Register a new user",
                "description": "Register a new user with a username, password, and email. Checks if a user with the same username or email already exists.",
                "operationId": "register",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "409": {
                        "description": "User already exists",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "400": {
                        "description": "Invalid email or password format",
                        "content": {
                            "text/plain": {}
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Logout a user",
                "description": "Log out a user using the provided authentication context. This method invalidates the user's session and clears the refresh token.",
                "operationId": "logout",
                "responses": {
                    "401": {
                        "description": "Unauthorized - No active user session or invalid authentication context",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "text/plain": {}
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Authenticate a user",
                "description": "Authenticate a user by their username and password using request parameters.",
                "operationId": "login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Incorrect credentials",
                        "content": {
                            "text/plain": {}
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Get all registered users",
                "description": "Retrieve a list of all users registered in the system. Only accessible by users with admin privileges.",
                "operationId": "getAllUsers",
                "responses": {
                    "200": {
                        "description": "List of all users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User is not an admin",
                        "content": {
                            "text/plain": {}
                        }
                    }
                }
            }
        },
        "/users/delete": {
            "delete": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Delete a user",
                "description": "Deletes a user based on the ID extracted from the authentication context. Only the user themselves or an admin can delete a user account.",
                "operationId": "deleteUser",
                "responses": {
                    "401": {
                        "description": "Unauthorized - No active user session or invalid authentication context",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "text/plain": {}
                        }
                    }
                }
            }
        },
        "/users/admin/delete/{username}": {
            "delete": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Delete a user by admin",
                "description": "Allows an admin to delete a user by their username.",
                "operationId": "deleteByAdmin",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Only accessible by admins",
                        "content": {
                            "text/plain": {}
                        }
                    }
                }
            }
        },
        "/notification": {
            "get": {
                "tags": [
                    "notification-controller"
                ],
                "operationId": "getNotification",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/flight": {
            "get": {
                "tags": [
                    "flight-controller"
                ],
                "operationId": "getFlight",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/airports/{id}": {
            "get": {
                "tags": [
                    "airport-controller"
                ],
                "summary": "Get airport by ID",
                "description": "Retrieve a specific airport by its ID",
                "operationId": "getAirportById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found the airport",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Airport"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Airport not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Airport"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "airport-controller"
                ],
                "summary": "Update an existing airport",
                "description": "Update an existing airport with the provided ID and data",
                "operationId": "updateAirport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Airport"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Airport updated successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Airport"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Airport not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Airport"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "airport-controller"
                ],
                "summary": "Delete an airport",
                "description": "Delete an airport with the provided ID",
                "operationId": "deleteAirport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Airport deleted successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "enum": [
                                        "100 CONTINUE",
                                        "101 SWITCHING_PROTOCOLS",
                                        "102 PROCESSING",
                                        "103 EARLY_HINTS",
                                        "103 CHECKPOINT",
                                        "200 OK",
                                        "201 CREATED",
                                        "202 ACCEPTED",
                                        "203 NON_AUTHORITATIVE_INFORMATION",
                                        "204 NO_CONTENT",
                                        "205 RESET_CONTENT",
                                        "206 PARTIAL_CONTENT",
                                        "207 MULTI_STATUS",
                                        "208 ALREADY_REPORTED",
                                        "226 IM_USED",
                                        "300 MULTIPLE_CHOICES",
                                        "301 MOVED_PERMANENTLY",
                                        "302 FOUND",
                                        "302 MOVED_TEMPORARILY",
                                        "303 SEE_OTHER",
                                        "304 NOT_MODIFIED",
                                        "305 USE_PROXY",
                                        "307 TEMPORARY_REDIRECT",
                                        "308 PERMANENT_REDIRECT",
                                        "400 BAD_REQUEST",
                                        "401 UNAUTHORIZED",
                                        "402 PAYMENT_REQUIRED",
                                        "403 FORBIDDEN",
                                        "404 NOT_FOUND",
                                        "405 METHOD_NOT_ALLOWED",
                                        "406 NOT_ACCEPTABLE",
                                        "407 PROXY_AUTHENTICATION_REQUIRED",
                                        "408 REQUEST_TIMEOUT",
                                        "409 CONFLICT",
                                        "410 GONE",
                                        "411 LENGTH_REQUIRED",
                                        "412 PRECONDITION_FAILED",
                                        "413 PAYLOAD_TOO_LARGE",
                                        "413 REQUEST_ENTITY_TOO_LARGE",
                                        "414 URI_TOO_LONG",
                                        "414 REQUEST_URI_TOO_LONG",
                                        "415 UNSUPPORTED_MEDIA_TYPE",
                                        "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                                        "417 EXPECTATION_FAILED",
                                        "418 I_AM_A_TEAPOT",
                                        "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                                        "420 METHOD_FAILURE",
                                        "421 DESTINATION_LOCKED",
                                        "422 UNPROCESSABLE_ENTITY",
                                        "423 LOCKED",
                                        "424 FAILED_DEPENDENCY",
                                        "425 TOO_EARLY",
                                        "426 UPGRADE_REQUIRED",
                                        "428 PRECONDITION_REQUIRED",
                                        "429 TOO_MANY_REQUESTS",
                                        "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                                        "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                                        "500 INTERNAL_SERVER_ERROR",
                                        "501 NOT_IMPLEMENTED",
                                        "502 BAD_GATEWAY",
                                        "503 SERVICE_UNAVAILABLE",
                                        "504 GATEWAY_TIMEOUT",
                                        "505 HTTP_VERSION_NOT_SUPPORTED",
                                        "506 VARIANT_ALSO_NEGOTIATES",
                                        "507 INSUFFICIENT_STORAGE",
                                        "508 LOOP_DETECTED",
                                        "509 BANDWIDTH_LIMIT_EXCEEDED",
                                        "510 NOT_EXTENDED",
                                        "511 NETWORK_AUTHENTICATION_REQUIRED"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "enum": [
                                        "100 CONTINUE",
                                        "101 SWITCHING_PROTOCOLS",
                                        "102 PROCESSING",
                                        "103 EARLY_HINTS",
                                        "103 CHECKPOINT",
                                        "200 OK",
                                        "201 CREATED",
                                        "202 ACCEPTED",
                                        "203 NON_AUTHORITATIVE_INFORMATION",
                                        "204 NO_CONTENT",
                                        "205 RESET_CONTENT",
                                        "206 PARTIAL_CONTENT",
                                        "207 MULTI_STATUS",
                                        "208 ALREADY_REPORTED",
                                        "226 IM_USED",
                                        "300 MULTIPLE_CHOICES",
                                        "301 MOVED_PERMANENTLY",
                                        "302 FOUND",
                                        "302 MOVED_TEMPORARILY",
                                        "303 SEE_OTHER",
                                        "304 NOT_MODIFIED",
                                        "305 USE_PROXY",
                                        "307 TEMPORARY_REDIRECT",
                                        "308 PERMANENT_REDIRECT",
                                        "400 BAD_REQUEST",
                                        "401 UNAUTHORIZED",
                                        "402 PAYMENT_REQUIRED",
                                        "403 FORBIDDEN",
                                        "404 NOT_FOUND",
                                        "405 METHOD_NOT_ALLOWED",
                                        "406 NOT_ACCEPTABLE",
                                        "407 PROXY_AUTHENTICATION_REQUIRED",
                                        "408 REQUEST_TIMEOUT",
                                        "409 CONFLICT",
                                        "410 GONE",
                                        "411 LENGTH_REQUIRED",
                                        "412 PRECONDITION_FAILED",
                                        "413 PAYLOAD_TOO_LARGE",
                                        "413 REQUEST_ENTITY_TOO_LARGE",
                                        "414 URI_TOO_LONG",
                                        "414 REQUEST_URI_TOO_LONG",
                                        "415 UNSUPPORTED_MEDIA_TYPE",
                                        "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                                        "417 EXPECTATION_FAILED",
                                        "418 I_AM_A_TEAPOT",
                                        "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                                        "420 METHOD_FAILURE",
                                        "421 DESTINATION_LOCKED",
                                        "422 UNPROCESSABLE_ENTITY",
                                        "423 LOCKED",
                                        "424 FAILED_DEPENDENCY",
                                        "425 TOO_EARLY",
                                        "426 UPGRADE_REQUIRED",
                                        "428 PRECONDITION_REQUIRED",
                                        "429 TOO_MANY_REQUESTS",
                                        "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                                        "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                                        "500 INTERNAL_SERVER_ERROR",
                                        "501 NOT_IMPLEMENTED",
                                        "502 BAD_GATEWAY",
                                        "503 SERVICE_UNAVAILABLE",
                                        "504 GATEWAY_TIMEOUT",
                                        "505 HTTP_VERSION_NOT_SUPPORTED",
                                        "506 VARIANT_ALSO_NEGOTIATES",
                                        "507 INSUFFICIENT_STORAGE",
                                        "508 LOOP_DETECTED",
                                        "509 BANDWIDTH_LIMIT_EXCEEDED",
                                        "510 NOT_EXTENDED",
                                        "511 NETWORK_AUTHENTICATION_REQUIRED"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/airports": {
            "get": {
                "tags": [
                    "airport-controller"
                ],
                "summary": "Get all airports",
                "description": "Retrieve a list of all airports",
                "operationId": "getAllAirports",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Airport"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "airport-controller"
                ],
                "summary": "Create a new airport",
                "description": "Create a new airport with the provided data",
                "operationId": "createAirport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Airport"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Airport created successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Airport"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/airports/search/name/{name}": {
            "get": {
                "tags": [
                    "airport-controller"
                ],
                "summary": "Search airports by name",
                "description": "Search for airports by their name",
                "operationId": "getAirportsByName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Airport"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/airports/search/country/{country}": {
            "get": {
                "tags": [
                    "airport-controller"
                ],
                "summary": "Search airports by country",
                "description": "Search for airports by their country",
                "operationId": "getAirportsByCountry",
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Airport"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/airports/search/city/{city}": {
            "get": {
                "tags": [
                    "airport-controller"
                ],
                "summary": "Search airports by city",
                "description": "Search for airports by their city",
                "operationId": "getAirportsByCity",
                "parameters": [
                    {
                        "name": "city",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Airport"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/airplanes/{id}": {
            "get": {
                "tags": [
                    "airplane-controller"
                ],
                "summary": "Get airplane by ID",
                "description": "Retrieve a specific airplane by its ID",
                "operationId": "getAirplaneById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found the airplane",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Airplane"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Airplane not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Airplane"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "airplane-controller"
                ],
                "summary": "Update an existing airplane",
                "description": "Update an existing airplane with the provided ID and data",
                "operationId": "updateAirplane",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Airplane"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Airplane updated successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Airplane"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Airplane not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Airplane"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "airplane-controller"
                ],
                "summary": "Delete an airplane",
                "description": "Delete an airplane with the provided ID",
                "operationId": "deleteAirplane",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Airplane deleted successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "enum": [
                                        "100 CONTINUE",
                                        "101 SWITCHING_PROTOCOLS",
                                        "102 PROCESSING",
                                        "103 EARLY_HINTS",
                                        "103 CHECKPOINT",
                                        "200 OK",
                                        "201 CREATED",
                                        "202 ACCEPTED",
                                        "203 NON_AUTHORITATIVE_INFORMATION",
                                        "204 NO_CONTENT",
                                        "205 RESET_CONTENT",
                                        "206 PARTIAL_CONTENT",
                                        "207 MULTI_STATUS",
                                        "208 ALREADY_REPORTED",
                                        "226 IM_USED",
                                        "300 MULTIPLE_CHOICES",
                                        "301 MOVED_PERMANENTLY",
                                        "302 FOUND",
                                        "302 MOVED_TEMPORARILY",
                                        "303 SEE_OTHER",
                                        "304 NOT_MODIFIED",
                                        "305 USE_PROXY",
                                        "307 TEMPORARY_REDIRECT",
                                        "308 PERMANENT_REDIRECT",
                                        "400 BAD_REQUEST",
                                        "401 UNAUTHORIZED",
                                        "402 PAYMENT_REQUIRED",
                                        "403 FORBIDDEN",
                                        "404 NOT_FOUND",
                                        "405 METHOD_NOT_ALLOWED",
                                        "406 NOT_ACCEPTABLE",
                                        "407 PROXY_AUTHENTICATION_REQUIRED",
                                        "408 REQUEST_TIMEOUT",
                                        "409 CONFLICT",
                                        "410 GONE",
                                        "411 LENGTH_REQUIRED",
                                        "412 PRECONDITION_FAILED",
                                        "413 PAYLOAD_TOO_LARGE",
                                        "413 REQUEST_ENTITY_TOO_LARGE",
                                        "414 URI_TOO_LONG",
                                        "414 REQUEST_URI_TOO_LONG",
                                        "415 UNSUPPORTED_MEDIA_TYPE",
                                        "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                                        "417 EXPECTATION_FAILED",
                                        "418 I_AM_A_TEAPOT",
                                        "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                                        "420 METHOD_FAILURE",
                                        "421 DESTINATION_LOCKED",
                                        "422 UNPROCESSABLE_ENTITY",
                                        "423 LOCKED",
                                        "424 FAILED_DEPENDENCY",
                                        "425 TOO_EARLY",
                                        "426 UPGRADE_REQUIRED",
                                        "428 PRECONDITION_REQUIRED",
                                        "429 TOO_MANY_REQUESTS",
                                        "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                                        "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                                        "500 INTERNAL_SERVER_ERROR",
                                        "501 NOT_IMPLEMENTED",
                                        "502 BAD_GATEWAY",
                                        "503 SERVICE_UNAVAILABLE",
                                        "504 GATEWAY_TIMEOUT",
                                        "505 HTTP_VERSION_NOT_SUPPORTED",
                                        "506 VARIANT_ALSO_NEGOTIATES",
                                        "507 INSUFFICIENT_STORAGE",
                                        "508 LOOP_DETECTED",
                                        "509 BANDWIDTH_LIMIT_EXCEEDED",
                                        "510 NOT_EXTENDED",
                                        "511 NETWORK_AUTHENTICATION_REQUIRED"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Airplane not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "enum": [
                                        "100 CONTINUE",
                                        "101 SWITCHING_PROTOCOLS",
                                        "102 PROCESSING",
                                        "103 EARLY_HINTS",
                                        "103 CHECKPOINT",
                                        "200 OK",
                                        "201 CREATED",
                                        "202 ACCEPTED",
                                        "203 NON_AUTHORITATIVE_INFORMATION",
                                        "204 NO_CONTENT",
                                        "205 RESET_CONTENT",
                                        "206 PARTIAL_CONTENT",
                                        "207 MULTI_STATUS",
                                        "208 ALREADY_REPORTED",
                                        "226 IM_USED",
                                        "300 MULTIPLE_CHOICES",
                                        "301 MOVED_PERMANENTLY",
                                        "302 FOUND",
                                        "302 MOVED_TEMPORARILY",
                                        "303 SEE_OTHER",
                                        "304 NOT_MODIFIED",
                                        "305 USE_PROXY",
                                        "307 TEMPORARY_REDIRECT",
                                        "308 PERMANENT_REDIRECT",
                                        "400 BAD_REQUEST",
                                        "401 UNAUTHORIZED",
                                        "402 PAYMENT_REQUIRED",
                                        "403 FORBIDDEN",
                                        "404 NOT_FOUND",
                                        "405 METHOD_NOT_ALLOWED",
                                        "406 NOT_ACCEPTABLE",
                                        "407 PROXY_AUTHENTICATION_REQUIRED",
                                        "408 REQUEST_TIMEOUT",
                                        "409 CONFLICT",
                                        "410 GONE",
                                        "411 LENGTH_REQUIRED",
                                        "412 PRECONDITION_FAILED",
                                        "413 PAYLOAD_TOO_LARGE",
                                        "413 REQUEST_ENTITY_TOO_LARGE",
                                        "414 URI_TOO_LONG",
                                        "414 REQUEST_URI_TOO_LONG",
                                        "415 UNSUPPORTED_MEDIA_TYPE",
                                        "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                                        "417 EXPECTATION_FAILED",
                                        "418 I_AM_A_TEAPOT",
                                        "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                                        "420 METHOD_FAILURE",
                                        "421 DESTINATION_LOCKED",
                                        "422 UNPROCESSABLE_ENTITY",
                                        "423 LOCKED",
                                        "424 FAILED_DEPENDENCY",
                                        "425 TOO_EARLY",
                                        "426 UPGRADE_REQUIRED",
                                        "428 PRECONDITION_REQUIRED",
                                        "429 TOO_MANY_REQUESTS",
                                        "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                                        "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                                        "500 INTERNAL_SERVER_ERROR",
                                        "501 NOT_IMPLEMENTED",
                                        "502 BAD_GATEWAY",
                                        "503 SERVICE_UNAVAILABLE",
                                        "504 GATEWAY_TIMEOUT",
                                        "505 HTTP_VERSION_NOT_SUPPORTED",
                                        "506 VARIANT_ALSO_NEGOTIATES",
                                        "507 INSUFFICIENT_STORAGE",
                                        "508 LOOP_DETECTED",
                                        "509 BANDWIDTH_LIMIT_EXCEEDED",
                                        "510 NOT_EXTENDED",
                                        "511 NETWORK_AUTHENTICATION_REQUIRED"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/airplanes": {
            "get": {
                "tags": [
                    "airplane-controller"
                ],
                "summary": "Get all airplanes",
                "description": "Retrieve a list of all airplanes",
                "operationId": "getAllAirplanes",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Airplane"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "airplane-controller"
                ],
                "summary": "Create a new airplane",
                "description": "Create a new airplane with the provided data",
                "operationId": "createAirplane",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Airplane"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Airplane created successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Airplane"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/airplanes/model/{model}": {
            "get": {
                "tags": [
                    "airplane-controller"
                ],
                "summary": "Find airplanes by model",
                "description": "Retrieve all airplanes of a specific model",
                "operationId": "getAirplanesByModel",
                "parameters": [
                    {
                        "name": "model",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "No airplanes found for the specified model",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Airplane"
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successfully retrieved airplanes",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Airplane"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/airplanes/airport/{airportId}": {
            "get": {
                "tags": [
                    "airplane-controller"
                ],
                "summary": "Find all airplanes at a specific airport",
                "description": "Retrieve all airplanes currently located at an airport with the given ID",
                "operationId": "getAirplanesByAirportId",
                "parameters": [
                    {
                        "name": "airportId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved airplanes",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Airplane"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Airport not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Airplane"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin": {
            "get": {
                "tags": [
                    "admin-controller"
                ],
                "operationId": "getAdmin",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "PasswordChangeDTO": {
                "required": [
                    "newPassword",
                    "oldPassword"
                ],
                "type": "object",
                "properties": {
                    "oldPassword": {
                        "type": "string"
                    },
                    "newPassword": {
                        "pattern": "^(?=.*[0-9])(?=.*[A-Z]).{8,}$",
                        "type": "string"
                    }
                }
            },
            "EmailChangeDTO": {
                "required": [
                    "newEmail"
                ],
                "type": "object",
                "properties": {
                    "newEmail": {
                        "type": "string"
                    }
                }
            },
            "RoleToUserDTO": {
                "required": [
                    "roleName",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "roleName": {
                        "type": "string"
                    }
                }
            },
            "RegisterDTO": {
                "required": [
                    "email",
                    "password",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "pattern": "^(?=.*[0-9])(?=.*[A-Z]).{8,}$",
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "LoginDTO": {
                "required": [
                    "password",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "Airport": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Airplane": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "model": {
                        "type": "string"
                    },
                    "productionDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "numberOfSeats": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maxDistance": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "airport": {
                        "$ref": "#/components/schemas/Airport"
                    }
                }
            }
        }
    }
}