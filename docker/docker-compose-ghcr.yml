version: '3.8'

services:
  user-service:
    image: ghcr.io/mrlipa/user-service:213742069
    ports:
      - "3001:8080"
    networks:
      - app-network

  notification-service:
    image: ghcr.io/mrlipa/notification-service:213742069
    ports:
      - "3002:8080"
    networks:
      - app-network

  flight-service:
    image: ghcr.io/mrlipa/flight-service:213742069
    ports:
      - "3003:8080"
    networks:
      - app-network

  airport-service:
    image: ghcr.io/mrlipa/airport-service:213742069
    ports:
      - "3004:8080"
    networks:
      - app-network

  airplane-service:
    image: ghcr.io/mrlipa/airplane-service:213742069
    ports:
      - "3005:8080"
    networks:
      - app-network

  admin-service:
    image: ghcr.io/mrlipa/admin-service:213742069
    ports:
      - "3006:8080"
    networks:
      - app-network
      
  swagger-editor:
    image: swaggerapi/swagger-editor
    container_name: "swagger-editor"
    ports:
      - "8081:8080"
    networks: 
      - app-network
    depends_on:
      - user-service
      - notification-service
      - flight-service
      - airport-service
      - airplane-service
      - admin-service

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - "8080:8080"
    volumes:
      - ./swagger/openapi.json:/openapi.json
    environment:
      SWAGGER_JSON: /openapi.json
    networks: 
      - app-network
    depends_on:
      - user-service
      - notification-service
      - flight-service
      - airport-service
      - airplane-service
      - admin-service
      
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    user: root
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./postgres/erd.sql:/docker-entrypoint-initdb.d/erd.sql
    ports:
      - "5432:5432"
    networks:
      - app-network
    privileged: true

  neo4j:
    build:
      context: ./neo4j
      dockerfile: Dockerfile
    user: root
    ports:
      - "7687:7687"
      - "7474:7474"
      - "7473:7473"
    command: ["./init-db.sh"]
    networks:
      - app-network
    privileged: true

  pdadmin:
    build:
      context: ./pgadmin
      dockerfile: Dockerfile
    user: root
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: example@gmail.com
      PGADMIN_DEFAULT_PASSWORD: example
      PGADMIN_SERVER_MODE: 'True'
      PGADMIN_SERVER_JSON_FILE: /pgadmin4/servers.json
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    links:
      - postgres
    ports:
      - "81:80"
    networks:
      - app-network
    privileged: true

networks:
  app-network:
    driver: bridge
